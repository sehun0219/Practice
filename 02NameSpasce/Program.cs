// 문법을 공부할 때 응용법까지 욕심내는 경우가 있다.
// 게임프로그래밍에서는 실제 코드를 짜면서 보기전까지는 응용에 대해서 느낄수 없음
// 배열이라는 것을 배웠는데 배열은 = 오브젝트를 관리할 때 쓸 수 있다. 이렇게 하면 안됨.
// 다른응용가능성이 많기 때문에 숫자를 모든 일에 적용할 수 있듯 사용해야한다. 


// 선언은 클래스랑 비슷함 
// 만약 프로그래머가 두명이면 각자 다른 역할을 맡게됨
// RPG를 만들기로했다면 
// A는 HP포션에 대해서 만들기로 함
// B는 MP포션에 대해서 만들기로 함

/*class Potion
{
    // 플레이어가 마시면 HP가 참
}
class Potion
{
    // 플레이어가 마시면 MP가 참
}*/

// 클래스의 이름은 식별자라고 함, 식별자가 같으면 식별이 안됨 
// 그래서 네임스페이스를 만들고 그안에 집어넣음 
// A 프로그래머가 만들면
namespace A_Pro // 만든사람의 이니셜을 넣던가 그렇게함. 보통
{
    class potion
    {

    }
}
// B 프로그래머가 만든 포션을 표현하려면
namespace B_Pro
{
    class potion
    {

    }
}

// using 처럼 미리 누군가 만들어놓은 코드를 쓸때 namespace개념이 활용된다.
class Program
{
    static void Main(string[] args)
    {
        // 클래스 Console 을 블록지정하고 F12를 누르면 정보를 볼수있는데 
        // namespace가 system임
        // 이말은 console이라는 클래스도 system이라는 집합에서 사용하는 클래스 이름이라는것임
        Console.WriteLine("하이에브리바디");
    }
}











