배열
배열은 연속적인 메모리에 동일한 데이터 타입의 요소들을 순차적으로 일열로 저장하는 자료구조이다. 
각 요소는 인덱스가 붙는다.
하나의 배열은 고정된 크기를 가지며, 배열 인덱스를 사용할 경우 각 배열요소를 즉시 엑세스할 수 있다. 
배열 A[0]이나 A[99]를 엑세스하는 시간은 동일하며 즉시 엑세스하여 읽거나 쓸수 있다.


배열의 차원
A[0] >> A 배열의 0번 인덱스, A[0,1] 2차원 배열의 인덱스는 이렇게 표시함


가변배열(Jagged array)
배열의 요소가 배열일 수도 있다. 각 배열의 요소는 서로 다른 차원과 크기를 갖는 배열일 수 있다. 
//Jagged Array
int[][] A = new int[3][];

//각 1차 배열 요소당 서로 다른 크기의 배열을 할당 할 수 있다.
A[0] = new int[2];
A[1] = new int[6]{1,2,3,4,5,6};
A[2] = new int[3]{9,8,7};


동적배열(Dynamic Array)
배열은 일정한 크기의 연속된 배열요소들의 집합이고, 배열의 크기는 초기화시 미리 지정된다. 정적배열(static Array)는 이렇게 처음 지정한
고정 크기를 계속 유지한다.
하지만 배열의 최대 크기를 미리 알수 없는 경우도 있다. 필요시 배열을 중간에 확장해야하는 경우도 있다. 
이렇게 배열이 꽉 찼을 경우 배열을 확장하거나 반대로 배열을 줄일 수 도 있는 것이 다이나믹 어레이 이다.

* 새로운 요소가 추가될 때 마다 배열의 크기를 하나씩 늘려가는개념이 기본이다.
즉 새 배열요소를 추가할 때 기존 배열의 크기보다 1개더 큰 임시배열(temp)을 생성한다.
임새배열은 모든 요소를 복사한후 다시 원래 배열에 할당한다. 그리고 새 배열의 마지막 요소에 값을 추가한다.

* 성장인자 GROWTH FACTOR를 2배로 하고 꽉차면 배열을 추가하는 방법을 사용하면 효율을 크게 높힐 수 있다.
수행시간이 거의 O(1)이 되고 꽉찻을때 늘려주는 타이밍에만 조금 더 연산을 한다.이런 방식을 분할 상환이라고 한다.




원형배열(Circular Array)
원형배열은 고정된 크기의 배열을 양끝이 연결된 것처럼 사용할 수 있게 한 자료구조로 원형버퍼, 링버퍼라고 불림.
배열의 크기가 N일때 배열의 마지막요소(N-1)에 도착하면 다음 배열이 처음[0]으로 순환하는 구조

원형배열은 First in First out에 적합하다. 선형은 Last in first out에 적합하다. 그래서 원형배열은 큐를 구현할때 사용된다.
% (mod연산자)나머지 연산자를 이용해서 원형배열의 인덱스 증가를 표현할수 있음

index = (index + 1)% arr.Length; 

이렇게하면 (7+1)%8=0 이되므로 A[7]의요소를 읽고 다음은 A[0]으로 이동함



.NET의 배열 클래스

닷넷에서는 고정 배열과 동적배열 모두 지원함. 고정배열은 32차원배열까지 지원하고 최대 2GB까지 크기를 할당할수 있음 app.config에서
더 크게 조절가능.
닷넷의 고정배열은 모두 System.Array 추상 클래스로부터 파생됨. 개발자가 직접 파생클래스를 만들수는 없음

동적배열 같은 경우엔, ArrayList와 List<T>가 있음.
ArrayList는 object 리턴배열을 가지며 List<T>는 개발자가 임의의 타입을 정할수 있는 Generic타입의 동적배열임



